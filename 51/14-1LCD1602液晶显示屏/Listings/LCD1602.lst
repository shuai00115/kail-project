C51 COMPILER V9.54   LCD1602                                                               12/16/2024 20:37:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\develop\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>
   3          
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_RW=P2^5;
   6          sbit LCD_E=P2^7;
   7          
   8          #define LCD_DataPort P0
   9          
  10          void LCD_Delay()    //@11.0592MHz 1ms
  11          {
  12   1        unsigned char i, j;
  13   1      
  14   1        _nop_();
  15   1        i = 2;
  16   1        j = 199;
  17   1        do
  18   1        {
  19   2          while (--j);
  20   2        } while (--i);
  21   1      }
  22          
  23          
  24          void LCD_WriteCommand(unsigned char Command)
  25          {
  26   1        LCD_RS=0;
  27   1        LCD_RW=0;
  28   1        LCD_DataPort=Command;
  29   1        LCD_E=1;
  30   1        LCD_Delay();
  31   1        LCD_E=0;
  32   1        LCD_Delay();
  33   1      }
  34          
  35          void LCD_WriteData(unsigned char Data)
  36          {
  37   1        LCD_RS=1;
  38   1        LCD_RW=0;
  39   1        LCD_DataPort=Data;
  40   1        LCD_E=1;
  41   1        LCD_Delay();
  42   1        LCD_E=0;
  43   1        LCD_Delay();
  44   1      }
  45          
  46          void LCD_Init(void)
  47          {
  48   1        LCD_WriteCommand(0x38);
  49   1        LCD_WriteCommand(0x0c);
  50   1        LCD_WriteCommand(0x06);
  51   1        LCD_WriteCommand(0x01);
  52   1      }
  53          
  54          void LCD_SetCursor(unsigned char Line,unsigned char Column)
C51 COMPILER V9.54   LCD1602                                                               12/16/2024 20:37:21 PAGE 2   

  55          {
  56   1        if(Line==1)
  57   1        {
  58   2          LCD_WriteCommand(0x80|(Column-1));  
  59   2        }
  60   1        else
  61   1        {
  62   2          LCD_WriteCommand(0x80|(Column-1)+0x40); 
  63   2        }
  64   1      }
  65          
  66          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  67          {
  68   1        LCD_SetCursor(Line,Column);
  69   1        LCD_WriteData(Char);
  70   1      }
  71          
  72          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
  73          {
  74   1        unsigned char i;
  75   1        LCD_SetCursor(Line,Column);
  76   1        for(i=0;String[i]!='\0';i++)
  77   1        {
  78   2          LCD_WriteData(String[i]);
  79   2        }
  80   1      }
  81          
  82          int LCD_Pow(int x,int y)
  83          {
  84   1        unsigned char i;
  85   1        int Result=1;
  86   1        for(i=0;i<y;i++)
  87   1        {
  88   2          Result*=x;
  89   2        }
  90   1        
  91   1        return Result;
  92   1      }
  93          
  94          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
  95          {
  96   1        unsigned char i;
  97   1        LCD_SetCursor(Line,Column);
  98   1        for(i=Length;i>0;i--)
  99   1        {
 100   2          LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
 101   2        }
 102   1      }
 103          
 104          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 105          {
 106   1        unsigned char i;
 107   1        unsigned int Number1;
 108   1        LCD_SetCursor(Line,Column);
 109   1        if(Number>=0)
 110   1        {
 111   2          LCD_WriteData('+');
 112   2          Number1=Number;
 113   2        }
 114   1        else
 115   1        {
 116   2          LCD_WriteData('-');
C51 COMPILER V9.54   LCD1602                                                               12/16/2024 20:37:21 PAGE 3   

 117   2          Number1=-Number;
 118   2        }
 119   1        for(i=Length;i>0;i--)
 120   1        {
 121   2          LCD_WriteData('0'+Number1/LCD_Pow(10,i-1)%10);
 122   2        }
 123   1      }
 124          
 125          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 126          {
 127   1        unsigned char i;
 128   1        unsigned char SingleNumber;
 129   1        LCD_SetCursor(Line,Column);
 130   1        for(i=Length;i>0;i--)
 131   1        {
 132   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 133   2          if(SingleNumber<10)
 134   2          {
 135   3            LCD_WriteData('0'+SingleNumber);
 136   3          }
 137   2          else
 138   2          {
 139   3            LCD_WriteData('A'+SingleNumber-10);
 140   3          }
 141   2          
 142   2        }
 143   1      }
 144          
 145          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 146          {
 147   1        unsigned char i;
 148   1        LCD_SetCursor(Line,Column);
 149   1        for(i=Length;i>0;i--)
 150   1        {
 151   2          LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 152   2        }
 153   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    388    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
