C51 COMPILER V9.54   IR                                                                    01/02/2025 18:21:26 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\develop\Keil_v5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\IR.lst) TABS(2) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Data[4];
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;
  12          unsigned char IR_RepeatFlag;
  13          unsigned char IR_Address;
  14          unsigned char IR_Command;
  15          
  16          /**
  17            * @brief 红外遥控器初始化
  18            * @param  无
  19            * @retval 无
  20            */
  21          
  22          void IR_Init(void)
  23          {
  24   1        Timer0_Init();
  25   1        Int0_Init();
  26   1      }
  27          
  28          /**
  29            * @brief 红外遥控器获取收到数据帧标志位
  30            * @param  无
  31          * @retval 是否收到数据帧，1为收到，0为未收到
  32            */
  33          
  34          unsigned char IR_GetDataFlag(void)
  35          {
  36   1        if(IR_DataFlag)
  37   1        {
  38   2          IR_DataFlag=0;
  39   2          return 1;
  40   2        }
  41   1        return 0;
  42   1      }
  43          
  44          /**
  45            * @brief 红外遥控器获取收到连发帧标志位
  46            * @param  无
  47            * @retval 是否收到连发帧，1为收到，0为未收到 
  48            */
  49          
  50          unsigned char IR_GetRepeatFlag(void)
  51          {
  52   1        if(IR_RepeatFlag)
  53   1        {
  54   2          IR_RepeatFlag=0;
C51 COMPILER V9.54   IR                                                                    01/02/2025 18:21:26 PAGE 2   

  55   2          return 1;
  56   2        }
  57   1        return 0;
  58   1      }
  59          
  60          /**
  61            * @brief 红外遥控器收到的地址数据
  62            * @param  无
  63            * @retval 收到的地址数据
  64            */
  65          
  66          unsigned char IR_GetAddress(void)
  67          {
  68   1        return IR_Address;
  69   1      }
  70          
  71          /**
  72            * @brief 红外遥控器收到的命令数据
  73            * @param  无
  74            * @retval 收到的命令数据
  75            */
  76          
  77          unsigned char IR_GetCommand(void)
  78          {
  79   1        return IR_Command;
  80   1      }
  81          
  82          //外部中断0中断函数，下降沿触发执行
  83          void Int0_Routine(void) interrupt 0
  84          {
  85   1        if(IR_State==0)     //状态0，空闲状态
  86   1        {
  87   2          
  88   2          Timer0_SetCounter(0);//定时计数器清0
  89   2          Timer0_Run(1);      //定时器启动
  90   2          IR_State=1;       //置状态为1
  91   2        }
  92   1        else if(IR_State==1)  //状态1，等待Start信号或Repeat信号
  93   1        {
  94   2          IR_Time=Timer0_GetCounter();  //获取上一次中断到此次中断的时间
  95   2          Timer0_SetCounter(0);   //定时计数器清0
  96   2          //如果计时为13.5ms，则接收到了Start信号
  97   2          if(IR_Time>12442-500&&IR_Time<12442+500)
  98   2          {   
  99   3            IR_State=2; //置状态2
 100   3          }
 101   2          //如果计时为11.25ms，则接收到了Repeat信号
 102   2          else if(IR_Time>10368-500&&IR_Time<10368+500)
 103   2          {
 104   3            IR_RepeatFlag=1;  //置收到连发帧标志位为1
 105   3            Timer0_Run(0);  //定时位停止
 106   3            IR_State=0; //置状态为0
 107   3          }
 108   2          else  //接收出错
 109   2          {
 110   3            IR_State=1; //置状态为1
 111   3          }
 112   2        }
 113   1        else if(IR_State==2)  //状态2，接收数据
 114   1        {
 115   2          IR_Time=Timer0_GetCounter(); //获取上一次中断到此次中断的时间
 116   2          Timer0_SetCounter(0); //定时计数器清0
C51 COMPILER V9.54   IR                                                                    01/02/2025 18:21:26 PAGE 3   

 117   2          //如果计时为1120us，则接收到了数据0
 118   2          if(IR_Time>1032-500&&IR_Time<1032+500)
 119   2          {   
 120   3            IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8)); //数据对应位清0
 121   3            IR_pData++; //数据位置指针自增
 122   3          }
 123   2          //如果计时为2250us，则接收到数据1
 124   2          else if(IR_Time>2074-1000&&IR_Time<2074+1000)
 125   2          {   
 126   3            IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));  //数据对应位置1
 127   3            IR_pData++; //数据位置指针自增
 128   3          }
 129   2          else  //接收出错
 130   2          {
 131   3            IR_pData=0; //数据位置指针清0
 132   3            IR_State=1; //置状态为1
 133   3          }
 134   2          if(IR_pData>=32)  //如果接收到了32位数据
 135   2          {
 136   3            IR_pData=0; //数据位指针清0
 137   3            if((IR_Data[0]==~IR_Data[1])&&(IR_Data[2]==~IR_Data[3]))  //数据验证
 138   3            {
 139   4              IR_Address=IR_Data[0];  //转存数据
 140   4              IR_Command=IR_Data[2];
 141   4              IR_DataFlag=1;  //置收到连发帧标志位为1
 142   4            }
 143   3            Timer0_Run(0);  //定时器停止
 144   3            IR_State=0; //置状态为0
 145   3          }
 146   2        }
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
